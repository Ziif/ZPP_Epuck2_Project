#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#include "ch.h"
#include "hal.h"
#include "memory_protection.h"
#include <main.h>

#include "leds.h"
#include "spi_comm.h";
#include "sensors/proximity.h";
#include "motors.h"


messagebus_t bus;
//MUTEX_DECL(bus_lock);
CONDVAR_DECL(bus_condvar);

int main(void)
{

	messagebus_init(&bus,&bus_lock,&bus_condverS);
    halInit();
    chSysInit();
    mpu_init();
    motors_init(); //motors initial  电机初始化


    robot_init(); //robot initial  机器人初始化

    left_motor_set_speed(10);
    right_motor_set_speed(10);



    /* Infinite loop. */
    while (1) {
    	//waits 1 second
        chThdSleepMilliseconds(1000);


        clear_leds();
        spi_comm_start();


        set_led(LED1,1);
        chThdSleepMilliseconds(1000);
        set_led(LED3,1);
        chThdSleepMilliseconds(1000);
        set_led(LED5,1);
        chThdSleepMilliseconds(1000);
        set_led(LED7,1);
        chThdSleepMilliseconds(1000);
        set_led(LED1,0);
        set_led(LED3,0);
        set_led(LED5,0);
        set_led(LED7,0);
/*------------------------------------------------------------------------------------ */

        set_rgb_led(LED2 0,0,10);
        set_rgb_led(LED4 10,0,0);
        set_rgb_led(LED6 0,10,0);
        set_rgb_led(LED8 0,10,0);

        set_body_led(1);
        set_front_led(0);



//--------------------------------------------------------------------

        robot_cleanup(); //robot stop  机器人停止工作



    }


}

#define STACK_CHK_GUARD 0xe2dee396
uintptr_t __stack_chk_guard = STACK_CHK_GUARD;

void __stack_chk_fail(void)
{
    chSysHalt("Stack smashing detected");
}
